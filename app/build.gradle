plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {
    namespace 'com.example.weather'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.weather"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding = true
    }
}


dependencies {
    def nav_version = "2.5.3"

////**************ROOM**********************

    def room_version = "2.5.1"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava3:$room_version"
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")

////******************КОРУТИНЫ*************//////
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

////*********RETROFIT*************////
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:4.9.3"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'

////*****Navigation Component******
// use -ktx for Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"


//************* rxJava**************
//    implementation "com.squareup.retrofit2:adapter-rxjava2"
    implementation "io.reactivex.rxjava3:rxkotlin:3.0.1"
    implementation 'io.reactivex.rxjava3:rxjava:3.1.6'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.2'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    // (see https://github.com/ReactiveX/RxJava/releases for latest 3.x.x version)

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    /*  ГРАФИКИ***********
        compile 'com.github.PhilJay:MPAndroidChart:v2.2.3'
    *


    */
    implementation 'com.github.PhilJay:MPAndroidChart:v2.2.3'
    //******DAGGER
//    implementation 'com.google.dagger:dagger:2.45'
    implementation 'com.google.dagger:dagger-android-support:2.45'
    kapt  'com.google.dagger:dagger-compiler:2.45:'
    kapt 'com.google.dagger:dagger-android-processor:2.45'

    ////************************GLIDE*****************************///
    implementation 'com.github.bumptech.glide:glide:4.15.1'

//    dagger = { module = "com.google.dagger:dagger-android-support", version.ref = "dagger" }
//    dagger_android_processor = {module = "com.google.dagger:dagger-android-processor", version.ref = "dagger" }
//    dagger_compiller = {module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }


}